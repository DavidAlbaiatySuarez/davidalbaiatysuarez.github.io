package DynamicSet;

/**
 * DynamicSet class from where to run the DLL and BST implementations for our Dynamic Set
 * 
 * @author 2474364A
 *
 */
public class DynamicSet {
	
	private static final void DLLExample() {
		// Initialize two doubly linked lists
		DLL dll1 = new DLL();
		DLL dll2 = new DLL();
		
		dll1.add(10);
		dll1.add(50);
		dll1.add(30);
		dll1.add(20);
		dll1.add(10); // This value will be ignored since we do not allow duplicates
		dll1.remove(10);
		dll1.remove(30);
				
		dll1.print(); // Expected result: 50,20
		System.out.println();
				
		dll2.add(20);
		dll2.add(70);
		dll2.add(50);
		dll2.add(5);
		dll2.remove(5); // Element 5 no longer in the DLL
		dll2.add(100);
		dll2.add(45);
				
		dll2.print(); // Expected result: 20, 70, 50, 100, 45
				
		System.out.println();
		System.out.println("-------------------");
		DLL temp = DLL.union(dll1, dll2);
		System.out.println("Union of the two sets provided: ");
		temp.print();
		System.out.println();
		temp = DLL.intersection(dll1, dll2);
		temp.print();
		System.out.println();
		temp = DLL.difference(dll1, dll2);
		temp.print();
		System.out.println();
		System.out.println(DLL.subset(dll1, dll2));
	}

	public static void main(String[] args) {
		/* Examples of possible method calls for both DLL and BST:
		 * .add(int key)
		 * .remove(int key)
		 * .isElement(int key)
		 * .setEmpty()
		 * .setSize()
		 * 
		 * Static method calls (this example refers to DLL):
		 * DLL.union(S, T) - returns a DLL 
		 * DLL.intersection(S, T) - returns a DLL
		 * DLL.difference(S, T) - returns a DLL
		 * DLL.subset(S, T)
		 * 
		 */
		
		DynamicSet.DLLExample();
		
		// Initialize two doubly linked lists
		DLL dll1 = new DLL();
		DLL dll2 = new DLL();
		
		dll1.add(10);
		dll1.add(50);
		dll1.add(30);
		dll1.add(20);
		dll1.add(10); // This value will be ignored since we do not allow duplicates
		
		dll1.print(); // Expected result: 10, 50, 30, 20
		System.out.println();
		
		dll2.add(20);
		dll2.add(70);
		dll2.add(50);
		dll2.add(5);
		dll2.remove(5); // Element 5 no longer in the DLL
		dll2.add(100);
		dll2.add(45);
		
		dll2.print(); // Expected result: 20, 70, 50, 100, 45
		
		System.out.println();
		System.out.println("-------------------");
		DLL temp = DLL.union(dll1, dll2);
		temp.print();
		System.out.println();
		temp = DLL.intersection(dll1, dll2);
		temp.print();
		System.out.println();
		temp = DLL.difference(dll1, dll2);
		temp.print();
		System.out.println();
		System.out.println(DLL.subset(dll1, dll2));
		
		
		

	}

}
